---
- name: Deploy and configure servers
  hosts: all
  remote_user: ubuntu
  vars:
    timeout_propose: "30"
    timeout_prevote: "6"
    timeout_precommit: "6"
    timeout_commit: "6"
    remote_home: "/data"
    testnet_home: "/path/to/testnet/dir"
  tasks:
    - name: Create necessary directories
      ansible.builtin.file:
        path: "{{ remote_home }}/{{ item }}"
        state: directory
        mode: '0755'
      loop:
        - node
      tags: init

    - name: Copy config.toml file
      ansible.builtin.copy:
        src: "{{ testnet_home }}/node{{ansible_play_batch.index(inventory_hostname)}}/config.toml"
        dest: "{{ remote_home }}/node/config.toml"
        mode: '0755'
        owner: ubuntu
        group: ubuntu
      tags: toml, init
    
    - name: Copy genesis file
      ansible.builtin.copy:
        src: "{{ testnet_home }}/node{{ ansible_play_batch.index(inventory_hostname)}}/genesis.json"
        # src: genesis.json
        dest: "{{ remote_home }}/node/genesis.json"
        mode: '0755'
        owner: ubuntu
        group: ubuntu
      tags: genesis, init

    - name: Copy private key file
      ansible.builtin.copy:
        src: "{{ testnet_home }}/node{{ ansible_play_batch.index(inventory_hostname)}}/private_key"
        dest: "{{ remote_home }}/node/private_key"
        mode: '0755'
        owner: ubuntu
        group: ubuntu
      tags: pkey, init

    - name: setup pg
      ansible.builtin.shell: |
        export PGPASSWORD=kwild && psql -h localhost -p 5432 -U kwild -d postgres -w -f settings.sql
        sudo service postgresql restart
      tags: startpg, init

    # - name: trust mode pg
    #   ansible.builtin.copy:
    #     src: "/path/to/pg_hba.conf"
    #     dest: "/data/pg/pg_hba.conf"
    #     mode: '0755'
    #     owner: ubuntu
    #     group: ubuntu
    #   tags: trust, init

    # - name: pg config
    #   ansible.builtin.copy:
    #     src: "/path/to/current.conf"
    #     dest: "/data/pg/postgresql.conf"
    #     mode: '0755'
    #     owner: ubuntu
    #     group: ubuntu
    #   tags: pgconf

    - name: setup pg
      ansible.builtin.shell: |
        sudo cp /data/pg/pg_hba.conf /etc/postgresql/16/main/pg_hba.conf
        sudo cp /data/pg/postgresql.conf /etc/postgresql/16/main/postgresql.conf
        sudo service postgresql restart
      tags: restartpg

    - name: init db
      ansible.builtin.copy:
        src: "../pg/init.sql"
        dest: "/data/pg/init.sql"
        mode: '0755'
        owner: ubuntu
        group: ubuntu
      tags: dbinit

    - name: copy reset.sql
      ansible.builtin.copy:
        src: "../pg/reset.sql"
        dest: "/data/pg/reset.sql"
        mode: '0755'
        owner: ubuntu
        group: ubuntu
      tags: sql
    
    - name: start pg
      ansible.builtin.shell: |
        export PGPASSWORD=kwild && psql -h localhost -p 5432 -U kwild -d postgres -w -f /data/pg/init.sql
      tags: startpg


    - name: stop kwild process
      ansible.builtin.shell: |
        ps aux | grep '{{ remote_home }}/bin/kwild -r' | grep -v grep | awk '{print $2}' | xargs kill -9
        rm -rf {{ remote_home }}/node/abci/
        rm -rf {{ remote_home }}/node/signing
        rm {{ remote_home }}/node/kwild.log
      tags: stopkwild,stop

    - name: restart postgres database
      ansible.builtin.shell: |
        psql -h localhost -p 5432 -U kwild -d postgres -f /data/pg/reset.sql
      tags: reset

    - name: Start kwild process
      ansible.builtin.shell: "nohup {{ remote_home }}/bin/kwild -r {{ remote_home }}/node --chain.consensus.timeout-commit 6s  --chain.consensus.timeout-propose 30s --chain.consensus.timeout-prevote 6s --chain.consensus.timeout-precommit 6s --chain.mempool.size 50000  --app.jsonrpc-listen-addr '0.0.0.0:8484'  --chain.rpc.listen-addr '0.0.0.0:26657' --log.rpc_level warn --chain.p2p.listen-addr tcp://0.0.0.0:26656 --chain.p2p.external-address {{ ansible_host }}:26656  > {{ remote_home }}/kwild.log 2>&1 &"
      async: 1
      poll: 0
      tags: kwild, start
  
    - name: Verify kwild process is running
      ansible.builtin.shell: "ps aux | grep '{{ remote_home }}/bin/kwild -r {{ remote_home }}/node' | grep -v grep"
      register: kwild_process
      failed_when: kwild_process.stdout == ""
      tags: verify, start
